name: DocuCat - Comment Triggered

on:
  issue_comment:
    types: [created]

jobs:
  check-trigger:
    # Only run on pull request comments (not issue comments)
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}

    steps:
      - name: Check if comment triggers DocuCat
        id: check
        run: |
          COMMENT_BODY="${{ github.event.comment.body }}"
          echo "Comment: $COMMENT_BODY"

          # Check for trigger phrases (case-insensitive)
          if echo "$COMMENT_BODY" | grep -iE '@docu-?cat|run.?docu-?cat' > /dev/null; then
            echo "‚úÖ DocuCat trigger detected in comment"
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "‚è≠Ô∏è  No DocuCat trigger found in comment"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  docu-cat:
    needs: check-trigger
    if: needs.check-trigger.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    name: Generate/Update Documentation

    # Required permissions for DocuCat to commit and push changes
    permissions:
      contents: write # Allow pushing commits
      pull-requests: write # Allow updating PR

    steps:
      - name: Get PR details
        id: pr
        run: |
          PR_NUMBER="${{ github.event.issue.number }}"
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

          # Fetch PR details to get head ref
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")

          HEAD_REF=$(echo "$PR_DATA" | jq -r '.head.ref')
          BASE_SHA=$(echo "$PR_DATA" | jq -r '.base.sha')
          HEAD_SHA=$(echo "$PR_DATA" | jq -r '.head.sha')

          echo "head_ref=$HEAD_REF" >> $GITHUB_OUTPUT
          echo "base_sha=$BASE_SHA" >> $GITHUB_OUTPUT
          echo "head_sha=$HEAD_SHA" >> $GITHUB_OUTPUT

          echo "üìã PR #$PR_NUMBER"
          echo "üåø Head ref: $HEAD_REF"
          echo "üìç Base SHA: ${BASE_SHA:0:8}..."
          echo "üìç Head SHA: ${HEAD_SHA:0:8}..."

      - name: Post reaction to comment
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions" \
            -d '{"content":"rocket"}'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for git diff
          token: ${{ secrets.GITHUB_TOKEN }}
          # Checkout the PR branch (head ref) to allow pushing commits
          ref: ${{ steps.pr.outputs.head_ref }}

      - name: Run DocuCat
        uses: ./ # Use this when testing in the DocuCat repository itself
        # For other repositories, use:
        # uses: lu/docu-cat@main  # or use a specific version tag
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          openrouter-api-key: ${{ secrets.OPENROUTER_API_KEY }}
        env:
          # Override event name to pull_request for DocuCat to work correctly
          GITHUB_EVENT_NAME: pull_request
          PR_NUMBER: ${{ steps.pr.outputs.pr_number }}
          BASE_SHA: ${{ steps.pr.outputs.base_sha }}
          HEAD_SHA: ${{ steps.pr.outputs.head_sha }}
